capability_types:
  tosca.capabilities.Attachment:
    derived_from: tosca.capabilities.Root
  tosca.capabilities.Container:
    derived_from: tosca.capabilities.Root
    properties:
      cpu_frequency:
        constraints:
        - greater_or_equal: 0.1 GHz
        required: false
        type: scalar-unit.frequency
      disk_size:
        constraints:
        - greater_or_equal: 0 MB
        required: false
        type: scalar-unit.size
      mem_size:
        constraints:
        - greater_or_equal: 0 MB
        required: false
        type: scalar-unit.size
      num_cpus:
        constraints:
        - greater_or_equal: 1
        required: false
        type: integer
  tosca.capabilities.Endpoint:
    derived_from: tosca.capabilities.Root
    properties:
      initiator:
        constraints:
        - valid_values:
          - source
          - target
          - peer
        default: source
        required: false
        type: string
      ip_address:
        default: 0.0.0.0/0
        type: string
      network_name:
        default: PRIVATE
        required: false
        type: string
      port:
        required: false
        type: tosca.datatypes.network.PortDef
      port_name:
        required: false
        type: string
      ports:
        constraints:
        - min_length: 1
        entry_schema:
          type: tosca.datatypes.network.PortSpec
        required: false
        type: map
      protocol:
        default: tcp
        required: true
        type: string
      secure:
        default: false
        required: false
        type: boolean
      url_path:
        required: false
        type: string
  tosca.capabilities.Endpoint.Admin:
    derived_from: tosca.capabilities.Endpoint
    properties:
      secure:
        constraints:
        - equal: true
        default: true
        required: false
        type: boolean
  tosca.capabilities.Endpoint.Database:
    derived_from: tosca.capabilities.Endpoint
  tosca.capabilities.Endpoint.Public:
    derived_from: tosca.capabilities.Endpoint
    properties:
      dns_name:
        description: The optional name to register with DNS
        required: false
        status: experimental
        type: string
      floating:
        default: false
        description: 'Indicates that the public address should be allocated from a
          pool of floating IPs that are associated with the network. '
        required: false
        status: experimental
        type: boolean
      network_name:
        constraints:
        - equal: PUBLIC
        default: PUBLIC
        required: false
        type: string
  tosca.capabilities.Node:
    derived_from: tosca.capabilities.Root
  tosca.capabilities.OperatingSystem:
    derived_from: tosca.capabilities.Root
    properties:
      architecture:
        description: 'The host Operating System (OS) architecture. '
        required: false
        type: string
      distribution:
        description: "The host Operating System (OS) distribution. Examples of valid\
          \ values for an \u201Ctype\u201D of \u201CLinux\u201D would include: debian,\
          \ fedora, rhel and ubuntu. "
        required: false
        type: string
      type:
        description: 'The host Operating System (OS) type. '
        required: false
        type: string
      version:
        description: 'The host Operating System version. '
        required: false
        type: version
  tosca.capabilities.Root: None
  tosca.capabilities.Scalable:
    derived_from: tosca.capabilities.Root
    properties:
      default_instances:
        description: 'An optional property that indicates the requested default number
          of instances that should be the starting number of instances a TOSCA orchestrator
          should attempt to allocate. The value for this property MUST be in the range
          between the values set for min_instances and max_instances properties. '
        required: false
        type: integer
      max_instances:
        default: 1
        description: 'This property is used to indicate the maximum number of instances
          that should be created for the associated TOSCA Node Template by a TOSCA
          orchestrator. '
        required: true
        type: integer
      min_instances:
        default: 1
        description: 'This property is used to indicate the minimum number of instances
          that should be created for the associated TOSCA Node Template by a TOSCA
          orchestrator. '
        required: true
        type: integer
  tosca.capabilities.network.Bindable:
    derived_from: tosca.capabilities.Node
  tosca.capabilities.network.Linkable:
    derived_from: tosca.capabilities.Node
interface_types:
  tosca.interfaces.Root: None
  tosca.interfaces.node.Prepare:
    configure:
      description: Operation to configure the node.
    derived_from: tosca.interfaces.Root
    preconfigure:
      description: Operation to pre-configure the node.
  tosca.interfaces.node.lifecycle.Standard:
    configure:
      description: Standard lifecycle configure operation.
    create:
      description: Standard lifecycle create operation.
    delete:
      description: Standard lifecycle delete operation.
    derived_from: tosca.interfaces.Root
    preconfigure:
      description: Standard lifecycle preconfigure operation.
    start:
      description: Standard lifecycle start operation.
    stop:
      description: Standard lifecycle stop operation.
  tosca.interfaces.relationship.Configure:
    add_source: '{''description'': ''Operation to notify the target node of a source
      node which is now available via a relationship.

      ''}'
    add_target:
      description: Operation to add a target node.
    derived_from: tosca.interfaces.Root
    post_configure_source:
      description: Operation to post-configure the source endpoint.
    post_configure_target:
      description: Operation to post-configure the target endpoint.
    pre_configure_source:
      description: Operation to pre-configure the source endpoint.
    pre_configure_target:
      description: Operation to pre-configure the target endpoint.
    remove_target:
      description: Operation to remove a target node.
    target_changed: '{''description'': ''Operation to notify source some property
      or attribute of the target changed

      ''}'
node_types:
  tosca.nodes.BlockStorage:
    capabilities:
      attachment:
        type: tosca.capabilities.Attachment
    derived_from: tosca.nodes.Root
    properties:
      size:
        constraints:
        - greater_or_equal: 1 MB
        type: scalar-unit.size
      snapshot_id:
        required: false
        type: string
      volume_id:
        required: false
        type: string
  tosca.nodes.Compute:
    capabilities:
      binding:
        type: tosca.capabilities.network.Bindable
      endpoint:
        type: tosca.capabilities.Endpoint.Admin
      host:
        type: tosca.capabilities.Container
      os:
        type: tosca.capabilities.OperatingSystem
      scalable:
        type: tosca.capabilities.Scalable
    derived_from: tosca.nodes.Root
    properties:
      meta:
        required: false
        type: string
      networks:
        entry_schema:
          type: tosca.datatypes.network.NetworkInfo
        required: false
        type: map
      ports:
        entry_schema:
          type: tosca.datatypes.network.PortInfo
        required: false
        type: map
      private_address:
        required: false
        type: string
      public_address:
        required: false
        type: string
    requirements:
    - local_storage:
        capability: tosca.capabilities.Attachment
        node: tosca.nodes.BlockStorage
        occurrences:
        - 0
        - UNBOUNDED
        relationship: tosca.relationships.AttachesTo
  tosca.nodes.DBMS:
    capabilities:
      host:
        type: tosca.capabilities.Container
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      port:
        description: 'The port the DBMS service will listen to for data and requests. '
        required: false
        type: integer
      root_password:
        description: 'The root password for the DBMS service. '
        required: false
        type: string
  tosca.nodes.Database:
    capabilities:
      database_endpoint:
        type: tosca.capabilities.Endpoint.Database
    derived_from: tosca.nodes.Root
    properties:
      name:
        description: 'The logical name of the database. '
        required: true
        type: string
      password:
        description: 'The password for the DB user account '
        required: false
        type: string
      port:
        description: 'The port the database service will use to listen for incoming
          data and requests. '
        required: false
        type: integer
      user:
        description: 'User account name for DB administration '
        required: false
        type: string
    requirements:
    - host:
        capability: tosca.capabilities.Container
        node: tosca.nodes.DBMS
        relationship: tosca.relationships.HostedOn
  tosca.nodes.Root:
    capabilities:
      feature:
        type: tosca.capabilities.Node
    interfaces:
      Prepare:
        type: tosca.interfaces.node.Prepare
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
    properties:
      state:
        description: "The state of the node instance. See section \u201CNode States\u201D\
          \ for allowed values. "
        required: false
        type: string
      tosca_id:
        description: 'A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type. '
        required: false
        type: string
      tosca_name:
        description: 'This attribute reflects the name of the Node Template as defined
          in the TOSCA service template. '
        required: false
        type: string
    requirements:
    - dependency:
        capability: tosca.capabilities.Node
        node: tosca.nodes.Root
        occurrences:
        - 0
        - UNBOUNDED
        relationship: tosca.relationships.DependsOn
  tosca.nodes.SoftwareComponent:
    derived_from: tosca.nodes.Root
    properties:
      admin_credential:
        required: false
        type: tosca.datatypes.Credential
      component_version:
        description: 'Software component version. '
        required: false
        type: version
    requirements:
    - host:
        capability: tosca.capabilities.Container
        node: tosca.nodes.Compute
        relationship: tosca.relationships.HostedOn
  tosca.nodes.WebApplication:
    capabilities:
      app_endpoint:
        type: tosca.capabilities.Endpoint
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      context_root:
        required: false
        type: string
    requirements:
    - host:
        capability: tosca.capabilities.Container
        node: tosca.nodes.WebServer
        relationship: tosca.relationships.HostedOn
  tosca.nodes.WebServer:
    capabilities:
      admin_endpoint:
        type: tosca.capabilities.Endpoint.Admin
      data_endpoint:
        type: tosca.capabilities.Endpoint
      host:
        type: tosca.capabilities.Container
    derived_from: tosca.nodes.SoftwareComponent
relationship_types:
  MyAttachesTo:
    derived_from: tosca.relationships.AttachesTo
    properties:
      location:
        default: /default_location
        type: string
  tosca.relationships.AttachesTo:
    derived_from: tosca.relationships.Root
    properties:
      device:
        required: false
        type: string
      location:
        constraints:
        - min_length: 1
        required: true
        type: string
    valid_target_types:
    - tosca.capabilities.Attachment
  tosca.relationships.ConnectsTo:
    derived_from: tosca.relationships.Root
    properties:
      credential:
        required: false
        type: tosca.datatypes.Credential
    valid_target_types:
    - tosca.capabilities.Endpoint
  tosca.relationships.DependsOn:
    derived_from: tosca.relationships.Root
    valid_target_types:
    - tosca.capabilities.Node
  tosca.relationships.HostedOn:
    derived_from: tosca.relationships.Root
    valid_target_types:
    - tosca.capabilities.Container
  tosca.relationships.Root:
    properties:
      tosca_name:
        required: true
        type: string
  tosca.relationships.RoutesTo:
    derived_from: tosca.relationships.ConnectsTo
    valid_target_types:
    - tosca.capabilities.Endpoint
  tosca.relationships.network.BindsTo:
    derived_from: tosca.relationships.DependsOn
    valid_target_types:
    - tosca.capabilities.network.Bindable
  tosca.relationships.network.LinksTo:
    derived_from: tosca.relationships.DependsOn
    valid_target_types:
    - tosca.capabilities.network.Linkable
topology_template:
  node_templates:
    my_storage:
      properties:
        size:
          get_input: storage_size
        snapshot_id:
          get_input: storage_snapshot_id
      requirements:
        requirements: []
      type: tosca.nodes.BlockStorage
    my_web_app_tier_1:
      capabilities:
        host:
          properties:
            disk_size: 10 GB
            mem_size: 4096 MB
            num_cpus:
              get_input: cpus
        os:
          properties:
            architecture: x86_64
            distribution: Fedora
            type: Linux
            version: 18.0
      requirements:
        requirements:
        - local_storage:
            node: my_storage
            relationship: storage_attachesto_1
      type: tosca.nodes.Compute
    my_web_app_tier_2:
      capabilities:
        host:
          properties:
            disk_size: 10 GB
            mem_size: 4096 MB
            num_cpus:
              get_input: cpus
        os:
          properties:
            architecture: x86_64
            distribution: Fedora
            type: Linux
            version: 18.0
      requirements:
        requirements:
        - local_storage:
            node: my_storage
            relationship: storage_attachesto_2
      type: tosca.nodes.Compute
  relationship_templates:
    storage_attachesto_1:
      properties:
        location: /my_data_location
      type: MyAttachesTo
    storage_attachesto_2:
      properties:
        location: /some_other_data_location
      type: MyAttachesTo
